name: 'ðŸª„ Mentor Wizard | ðŸ”„ CI'

on:
  push:
    branches:
      - develop
    paths-ignore:
      - README.md
  pull_request:
    branches:
      - develop
      - feature/*
      - fix/*
      - hotfix/*
      - epic/*
      - release/*
    paths-ignore:
      - README.md

jobs:
#  build-ci-image:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v3
#      - name: Log in to Docker Hub
#        run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
#      - name: Build and push Docker image
#        run: |
#          docker build --no-cache -f ./docker/ci/Dockerfile-ci -t ${{ secrets.CI_REGISTRY_IMAGE }}:${{ secrets.TEST_TAG }} .
#          docker push ${{ secrets.CI_REGISTRY_IMAGE }}:${{ secrets.TEST_TAG }}

  composer-dependencies:
    runs-on: ubuntu-latest
    env:
      DB_HOST: 127.0.0.1
      POSTGRES_DB: testing
      POSTGRES_USER: db
      POSTGRES_PASSWORD: db
    services:
      postgres:
        image: postgres:17
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: testing
          POSTGRES_USER: db
          POSTGRES_PASSWORD: db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.4'
      - name: Install dependencies
        run: |
          cp .env.ci .env
          composer install --no-interaction --prefer-dist
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: vendor/
          key: composer-vendor
      - name: Upload vendor artifacts
        uses: actions/upload-artifact@v4
        with:
          name: composer-vendor
          path: vendor/

  yarn-dependencies:
    runs-on: ubuntu-latest
    needs: composer-dependencies
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Download vendor artifacts
        uses: actions/download-artifact@v4
        with:
          name: composer-vendor
          path: vendor/
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22'
      - name: Install Yarn
        run: |
          corepack enable
          corepack prepare yarn@4.6.0 --activate
      - name: Install dependencies
        run: yarn install
      - name: Build assets
        run: yarn build
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: node_modules/
          key: node-modules
      - name: Upload node artifacts
        uses: actions/upload-artifact@v4
        with:
          name: node-build
          path: public/build/

  ide-helper:
    runs-on: ubuntu-latest
    needs: [composer-dependencies, yarn-dependencies]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Download vendor artifacts
        uses: actions/download-artifact@v4
        with:
          name: composer-vendor
          path: vendor/
      - name: Download node build artifacts
        uses: actions/download-artifact@v4
        with:
          name: node-build
          path: public/build/
      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.4'
      - name: Generate IDE helper files
        run: |
          php artisan ide-helper:models -M
          php artisan ide-helper:actions
          php artisan ide-helper:meta
          php artisan ide-helper:generate
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ide-helper
          path: |
            _ide_helper.php
            _ide_helper_models.php
            _ide_helper_actions.php
            .phpstorm.meta.php

  lints:
    runs-on: ubuntu-latest
    needs: [composer-dependencies, ide-helper]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Download vendor artifacts
        uses: actions/download-artifact@v4
        with:
          name: composer-vendor
          path: vendor/
      - name: Download ide-helper artifacts
        uses: actions/download-artifact@v4
        with:
          name: ide-helper
          path: |
            _ide_helper.php
            _ide_helper_models.php
            _ide_helper_actions.php
            .phpstorm.meta.php
      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.4'
      - name: Run PHPStan
        run: |
          cp .env.ci .env
          php artisan key:generate
          ./vendor/bin/phpstan analyse --memory-limit=2G --error-format=json > phpstan.json || true
          php artisan phpstan:convert phpstan.json codequality.json
      - name: Upload code quality report
        uses: actions/upload-artifact@v4
        with:
          name: codequality
          path: codequality.json

  tests:
    runs-on: ubuntu-latest
    needs: [composer-dependencies, yarn-dependencies, ide-helper]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.4'
      - name: Run tests
        run: |
          cp .env.ci .env
          php artisan key:generate
          php artisan vendor:publish --tag=laravel-assets --tag=log-viewer-assets --tag=telescope-assets --ansi --force
          ./vendor/bin/pest --coverage --parallel --coverage-cobertura=coverage/coverage.xml --coverage-clover=coverage/coverage-clover.xml --coverage-html=coverage
          ./vendor/bin/pest --mutate --covered-only --parallel --min=100
      - name: Upload coverage report
        uses: actions/upload-artifact@v3
        with:
          name: coverage
          path: coverage/coverage.xml
