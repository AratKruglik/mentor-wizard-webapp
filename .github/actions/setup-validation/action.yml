name: '⚙️ Setup environment'
description: 'Setups environment for validation tasks.'

inputs:
  php:
    description: 'PHP version to install'
    required: true
    default: '8.4'

  node:
    description: 'Node.js version to install'
    required: true
    default: '22.x'

  use-php:
    description: 'Whether to install PHP and dependencies'
    required: false
    default: 'false'

  use-node:
    description: 'Whether to install Node.js and dependencies'
    required: false
    default: 'false'

runs:
  using: composite
  steps:
    - name: '📋 Install Task'
      shell: bash
      run: sh -c "$(curl -s --location https://taskfile.dev/install.sh)" -- -d -b /usr/local/bin > /dev/null 2>&1

    - name: '🐘 Setup PHP ${{ inputs.php }}'
      if: ${{ inputs.use-php == 'true' }}
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ inputs.php }}
        coverage: none
        tools: cs2pr

    - name: '🗃 Get composer cache directory'
      if: ${{ inputs.use-php == 'true' }}
      id: composer-cache
      shell: bash
      run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

    - name: '💽 Cache composer dependencies'
      if: ${{ inputs.use-php == 'true' }}
      uses: actions/cache@v4
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: "${{ runner.os }}-${{ github.ref_name }}-composer-${{ hashFiles('**/composer.lock') }}"
        restore-keys: ${{ runner.os }}-${{ github.ref_name }}-composer-

    - name: '💽 Cache var directory'
      uses: actions/cache@v4
      if: ${{ inputs.use-php == 'true' }}
      with:
        path: var
        key: "${{ runner.os }}-${{ github.ref_name }}-var"
        restore-keys: ${{ runner.os }}-${{ github.ref_name }}-var

    - name: '📦 Install composer dependencies'
      if: ${{ inputs.use-php == 'true' }}
      shell: bash
      run: composer i --no-progress --no-scripts -qn --ansi;

    - name: '🟧 Setup pnpm'
      if: ${{ inputs.use-node == 'true' }}
      uses: pnpm/action-setup@v4

    - name: '❇️ Setup Node.js ${{ inputs.node }}'
      if: ${{ inputs.use-node == 'true' }}
      uses: actions/setup-node@v4
      with:
        cache: pnpm
        node-version: ${{ inputs.node }}

    - name: '📦 Install pnpm dependencies'
      if: ${{ inputs.use-node == 'true' }}
      shell: bash
      run: pnpm i -sD --frozen-lockfile --color=always
